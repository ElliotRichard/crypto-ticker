{"ast":null,"code":"import { symbolList } from '../../../symbolList';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/crypto.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"angular-ng-autocomplete\";\nimport * as i4 from \"@angular/common\";\n\nfunction ManageComponent_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"a\", 10);\n  }\n\n  if (rf & 2) {\n    const item_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"innerHTML\", item_r6, i0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction ManageComponent_ng_template_9_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 10);\n  }\n\n  if (rf & 2) {\n    const notFound_r7 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"innerHTML\", notFound_r7, i0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction ManageComponent_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ManageComponent_ng_template_9_div_0_Template, 1, 1, \"div\", 11);\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.keyword.length > 0);\n  }\n}\n\nfunction ManageComponent_tr_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\", 12);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 13);\n    i0.ɵɵelementStart(4, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function ManageComponent_tr_13_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const symbol_r10 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.remove(symbol_r10);\n    });\n    i0.ɵɵtext(5, \"Remove\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const symbol_r10 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(symbol_r10);\n  }\n}\n\nexport let ManageComponent = /*#__PURE__*/(() => {\n  class ManageComponent {\n    constructor(cryptoService) {\n      this.cryptoService = cryptoService;\n      this.data = symbolList;\n      this.currentSearch = [];\n      this.keyword = '';\n      this.crypto = '';\n      this.symbols = cryptoService.get();\n    }\n\n    add() {\n      this.symbols = this.cryptoService.add(this.crypto.toUpperCase());\n      this.crypto = '';\n    }\n\n    remove(symbol) {\n      this.symbols = this.cryptoService.remove(symbol);\n    }\n\n    selectEvent($event) {\n      this.crypto = $event;\n      this.add();\n    }\n\n    onChangeSearch($event) {\n      if ($event.length > 1) {\n        this.currentSearch = this.data.slice().filter(value => {\n          return value.toLowerCase().includes($event.toLowerCase());\n        });\n        this.keyword = $event;\n      } else if ($event.length === 0) {\n        this.keyword = '';\n        this.currentSearch = [];\n      }\n    }\n\n  }\n\n  ManageComponent.ɵfac = function ManageComponent_Factory(t) {\n    return new (t || ManageComponent)(i0.ɵɵdirectiveInject(i1.CryptoService));\n  };\n\n  ManageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ManageComponent,\n    selectors: [[\"app-manage\"]],\n    decls: 14,\n    vars: 5,\n    consts: [[1, \"manage\"], [1, \"mdl-layout-title\"], [2, \"margin-bottom\", \"5px\", 3, \"submit\"], [1, \"ng-autocomplete\"], [3, \"data\", \"searchKeyword\", \"itemTemplate\", \"notFoundTemplate\", \"selected\", \"inputChanged\"], [\"autoComplete\", \"\"], [\"itemTemplate\", \"\"], [\"notFoundTemplate\", \"\"], [1, \"mdl-data-table\", \"mdl-data-table--selectable\", \"mdl-shadow--2dp\", 2, \"width\", \"100%\"], [4, \"ngFor\", \"ngForOf\"], [3, \"innerHTML\"], [3, \"innerHTML\", 4, \"ngIf\"], [1, \"mdl-data-table__cell--non-numeric\"], [2, \"padding-top\", \"6px\"], [1, \"mdl-button\", 3, \"click\"]],\n    template: function ManageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"span\", 1);\n        i0.ɵɵtext(2, \"Add Coins:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 2);\n        i0.ɵɵlistener(\"submit\", function ManageComponent_Template_form_submit_3_listener() {\n          return ctx.add();\n        });\n        i0.ɵɵelementStart(4, \"div\", 3);\n        i0.ɵɵelementStart(5, \"ng-autocomplete\", 4, 5);\n        i0.ɵɵlistener(\"selected\", function ManageComponent_Template_ng_autocomplete_selected_5_listener($event) {\n          return ctx.selectEvent($event);\n        })(\"inputChanged\", function ManageComponent_Template_ng_autocomplete_inputChanged_5_listener($event) {\n          return ctx.onChangeSearch($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(7, ManageComponent_ng_template_7_Template, 1, 1, \"ng-template\", null, 6, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(9, ManageComponent_ng_template_9_Template, 1, 1, \"ng-template\", null, 7, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"table\", 8);\n        i0.ɵɵelementStart(12, \"tbody\");\n        i0.ɵɵtemplate(13, ManageComponent_tr_13_Template, 6, 1, \"tr\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(8);\n\n        const _r3 = i0.ɵɵreference(10);\n\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"data\", ctx.currentSearch)(\"searchKeyword\", ctx.keyword)(\"itemTemplate\", _r1)(\"notFoundTemplate\", _r3);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngForOf\", ctx.symbols);\n      }\n    },\n    directives: [i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.NgForm, i3.AutocompleteComponent, i4.NgForOf, i4.NgIf],\n    styles: [\".manage[_ngcontent-%COMP%]{width:100%}.mdl-layout-title[_ngcontent-%COMP%]{margin:5px}.ng-autocomplete[_ngcontent-%COMP%]{width:100%;margin-bottom:3vh}\"]\n  });\n  return ManageComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}